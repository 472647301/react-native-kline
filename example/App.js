/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, {Component} from 'react';
import {StyleSheet, Text, SafeAreaView} from 'react-native';
import ByronKlineChart from 'react-native-kline';
import {dispatchByronKline, KLineIndicator} from 'react-native-kline';
import axios from 'axios';

export default class App extends Component {
  state = {
    list: [],
  };

  onMoreKLineData = (params) => {};

  async initKlineChart() {
    const res = await axios
      .get(
        'https://www.okex.com/priapi/v5/market/candles?instId=BTC-USDT&bar=1m&limit=1000',
      )
      .catch((err) => {
        console.log(err);
        return;
      });
    console.log(res);
    if (!res || !res.data || !res.data.data || !res.data.data.length) {
      return;
    }
    const list = [];
    for (let i = 0; i < res.data.data.length; i++) {
      const item = res.data.data[i];
      // 返回值分别为[timestamp,open,high,low,close,volume]
      list.push({
        amount: 0,
        open: Number(item[1]),
        close: Number(item[4]),
        high: Number(item[2]),
        id: parseInt(Number(item[0]) / 1000),
        low: Number(item[3]),
        vol: Number(item[5]),
      });
    }
    list.sort((l, r) => (l.id > r.id ? 1 : -1));
    this.setState({list});
    this.subscribeKLine();
  }

  subscribeKLine() {
    const ws = new WebSocket('wss://wspri.okex.com:8443/ws/v5/public');
    ws.onopen = () => {
      ws.send(
        JSON.stringify({
          op: 'subscribe',
          args: [{channel: 'candle1m', instId: 'BTC-USDT'}],
        }),
      );
    };
    ws.onmessage = (ev) => {
      console.log(ev.data);
      try {
        const data = JSON.parse(ev.data);
        const item = data.data[0];
        dispatchByronKline('update', [
          {
            amount: 0,
            open: Number(item[1]),
            close: Number(item[4]),
            high: Number(item[2]),
            id: parseInt(Number(item[0]) / 1000),
            low: Number(item[3]),
            vol: Number(item[5]),
          },
        ]);
      } catch (err) {}
    };
  }

  componentDidMount() {
    this.initKlineChart();
  }

  render() {
    return (
      <SafeAreaView style={styles.container}>
        <Text style={styles.welcome}>☆ByronKline example☆</Text>
        <Text style={styles.instructions}>STATUS: loaded</Text>
        <Text style={styles.welcome}>☆☆☆</Text>
        <ByronKlineChart
          style={{flex: 1}}
          datas={this.state.list}
          onMoreKLineData={this.onMoreKLineData}
          indicators={[KLineIndicator.MainMA]}
          // mainBackgroundColor={'#ffffff'}
        />
      </SafeAreaView>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
});
